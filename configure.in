# THIS FILE WAS AUTOMAGICALLY GENERATED FROM FRAGMENTS. 
# You should edit the fragments instead of editing this file. 

#
# configure.head - first fragment of top-level configure.in
#
# Author: Tatu Ylonen <ylo@ssh.fi>
#
# Copyright (c) 1997 SSH Communications Security, Finland
#                    All rights reserved
#

AC_INIT(lib/sshutil/sshbuffer.c)
AC_PREREQ(2.10)

AM_CONFIG_HEADER(sshconf.h)

AC_CANONICAL_SYSTEM
AC_MSG_CHECKING(cached information)
hostcheck="$target"
AC_CACHE_VAL(ac_cv_hostcheck, [ ac_cv_hostcheck="$hostcheck" ])
if test "$ac_cv_hostcheck" != "$hostcheck"; then
  AC_MSG_RESULT(changed)
  AC_MSG_WARN(config.cache exists!)
  AC_MSG_ERROR(you must do 'make distclean' first to compile for different host or different parameters.)
else
  AC_MSG_RESULT(ok)
fi

AM_INIT_AUTOMAKE(sshtree,1.0)

# XXX temporarily force no optimization unless explicitly requested to
# ease debugging.
if test '!' -n "$CFLAGS"; then
  CFLAGS="-g"
fi

case "$target" in
  alpha-dec-osf*)
    # If we are not using gcc, we want the ansi version of cc. 
    if test -z "$GCC"; then
      CFLAGS="$CFLAGS -std1"
    fi
    ;;
  *)
    ;;
esac

AC_PROG_CC

AC_ADD_GCC_CFLAGS([-Wall])
AC_ISC_POSIX

AC_PROG_RANLIB
AC_CHECK_TOOL(AR, ar)
AC_CHECK_PROGS(M4, gm4 m4, m4)
AC_PROG_MAKE_SET
AC_PROG_INSTALL

AC_ARG_PROGRAM

AC_HEADER_STDC
AC_HEADER_TIME
AC_HEADER_DIRENT
AC_HEADER_STAT
AC_HEADER_SYS_WAIT

AC_TYPE_SIGNAL
AC_TYPE_SIZE_T
AC_TYPE_OFF_T
AC_TYPE_MODE_T
AC_CHECK_SIZEOF(long,4)
AC_CHECK_SIZEOF(int,4)
AC_CHECK_SIZEOF(short,2)

AC_C_CONST
AC_C_INLINE

AC_MSG_CHECKING(whether to enable harness at IPSec)
AC_ARG_ENABLE(ipsec-harness,
[  --enable-ipsec-harness  Enable IPSec harness.],
[ case "$enableval" in
  yes)
    AC_MSG_RESULT(yes)
    AC_DEFINE(HARNESS)
    ;;
  *)
    AC_MSG_RESULT(no)
    ;;
  esac ], AC_MSG_RESULT(no)
)

AC_MSG_CHECKING(whether to enable light debugging)
debug_light_defined=no
AC_ARG_ENABLE(debug,
[  --enable-debug          Enable light debugging.],
[ case "$enableval" in
  yes)
    AC_MSG_RESULT(yes)
    AC_DEFINE(DEBUG_LIGHT)
    debug_light_defined=yes
    ;;
  *)
    AC_MSG_RESULT(no)
    ;;
  esac ], AC_MSG_RESULT(no)
)

AC_MSG_CHECKING(whether to enable heavy debugging)
AC_ARG_ENABLE(debug-heavy,
[  --enable-debug-heavy    Enable heavy debugging.],
[ case "$enableval" in
  yes)
    AC_MSG_RESULT(yes)
    AC_DEFINE(DEBUG_HEAVY)
    if test "debug_light_defined" = "no"; then
      AC_DEFINE(DEBUG_LIGHT)
    fi
    ;;
  *)
    AC_MSG_RESULT(no)
    ;;
  esac ], AC_MSG_RESULT(no)
)


COPY_INCLUDE='$(top_srcdir)/copy_include'
AC_SUBST(COPY_INCLUDE)

AC_CONFIG_SUBDIRS(lib/trq)

#
# configure.in.inc for apps/ssh
#
# Author: Tatu Ylonen <ylo@ssh.fi>
#
# Copyright (c) 1997 SSH Communications Security, Finland
#                    All rights reserved
#
# configure.in fragment for the ssh2 application.
#

AC_DEFINE_UNQUOTED(HOSTTYPE, "$host")

# Platform-specific stuff.
case "$host" in
  *-*-sunos4.1.1*)
    os_sunos=yes
    ;;
  *-*-sunos*)
    os_sunos=yes
    ;;
  *-sgi-irix5*)
    # Irix stuff from snabb@niksula.hut.fi, tsurmacz@asic.ict.pwr.wroc.pl,
    # C.Martin@sheffield.ac.uk, raistlin@uni-paderborn.de
    no_libsocket=yes
    no_libsun=yes
    no_libnsl=yes
    ;;
  *-sgi-irix6*)
    # from d-champion@uchicago.edu
    no_libsocket=yes
    no_libnsl=yes
    no_libsun=yes
    if test -z "$GCC";then
        if test "`uname -s`" = "IRIX64"; then
            CFLAGS="-n32 -D_LONG_LONG_LIMB $CFLAGS"
            LDFLAGS="-n32 $LDFLAGS"
        else
            CFLAGS="-n32 $CFLAGS"
            LDFLAGS="-n32 $LDFLAGS"
        fi
    fi
    ;;
  *-ibm-aix*)
    os_aix=yes
    ;;
  *-dec-ultrix*)
    # Ultrix stuff from dmckilli@qc.bell.ca, jbotz@orixa.mtholyoke.edu,
    # corey@cac.washington.edu
    AC_TRY_COMPILE([#include <syslog.h>],
		   [int foo = LOG_DAEMON; ],
		   ,
		   AC_DEFINE(NEED_SYS_SYSLOG_H))
    ;;
  *-*-hpux*)
    # HPUX flags from jgotts@engin.umich.edu
    if test -z "$GCC"; then
      CFLAGS="$CFLAGS -Ae -D_HPUX_SOURCE"
    fi
    AC_DEFINE(HPSUX_NONSTANDARD_X11_KLUDGE)
    ;;
  *-*-nextstep*)
    # Nextstep support from a person who wants to remain anonymous
    no_termios=yes
    ;;
  i*86-*-bsdi2.1*)
    no_pipe=yes
    X_EXTRA_LIBS="$X_EXTRA_LIBS -lipc"
    ;;
  i*86-*-bsdi*)
    no_pipe=yes
    ;;
  m68k-apple-aux*)
    # Macintosh A/UX tweaks - prune LIB = -L/usr/local/lib, exceeds ld capacity
    #   add -lposix to it, needed for termio stuff
    LIBS="-lposix"
    AC_DEFINE(_POSIX_SOURCE)
    ;;
  *-*-sysv4*)
    AC_CHECK_LIB(gen, openlog)
    ;;
  i*86-unknown-sco3.2v4*)
    # From moi@dio.com
    AC_DEFINE(SCO)
    no_ranlib=yes
    CFLAGS="$CFLAGS -UM_I86SM"
    ;;
  i*86-unknown-sco3.2v5*)
    # From brian@ilinx.com
    AC_DEFINE(SCO)
    AC_DEFINE(SCO5)
    no_ranlib=yes
    CFLAGS="$CFLAGS -UM_I86SM"
    ;;
  *)
    ;;
esac

export CFLAGS CC

AC_HEADER_SYS_WAIT
AC_CHECK_HEADERS(lastlog.h utmp.h shadow.h)
AC_CHECK_HEADERS(sys/select.h sys/ioctl.h)
AC_CHECK_HEADERS(utime.h ulimit.h sys/resource.h)

AC_CHECK_LIB(bsd, bcopy)

AC_CHECK_FUNCS(gettimeofday times getrusage ftruncate)
AC_CHECK_FUNCS(strchr memcpy clock fchmod ulimit umask)
AC_CHECK_FUNCS(waitpid)

AC_PATH_XTRA

AC_PROG_LN_S
AC_SUBST(LN_S)

if test "$no_x" = yes; then
  CONFPROGRAMS=""
else
  AC_PATH_PROG(XAUTH_PATH, xauth)
  if test -n "$XAUTH_PATH"; then
    AC_DEFINE_UNQUOTED(XAUTH_PATH, "$XAUTH_PATH")
  fi
  if test "x$XAUTH_PATH" = "x"; then
    AC_MSG_ERROR(configuring with X but xauth not found - aborting)
  fi
  CONFPROGRAMS="ssh-askpass2"
fi
AC_SUBST(CONFPROGRAMS)

# Try to determine the directory name for unix-domain X11 sockets
if test '!' -d /tmp/.X11-unix; then
  if test -d /var/X/.X11-unix; then
    X11_DIR='"/var/X/.X11-unix"'
    AC_SUBST(X11_DIR)
  else
    if test -d /tmp/.X11-pipe; then
      X11_DIR='"/tmp/.X11-pipe"'
      AC_SUBST(X11_DIR)
    fi
  fi
fi

AC_MSG_CHECKING(whether to support SecurID)
AC_ARG_WITH(securid,
[  --with-securid[=PATH]   Enable support for Security Dynamics SecurID card.],
[ case "$withval" in
  no)
    AC_MSG_RESULT(no)
    ;;
  yes)
    AC_MSG_RESULT(yes)
    if test '!' -f /usr/ace/sdiclient.a; then
      AC_ERROR(SecurID sdiclient.a not found in /usr/ace: you must supply the path.)
    fi
    AC_MSG_RESULT(yes)
    AC_MSG_RESULT(Assuming SecurID headers and libraries are in /usr/ace.)
    AC_DEFINE(HAVE_SECURID)
    CFLAGS="$CFLAGS -I/usr/ace"
    LIBS="/usr/ace/sdiclient.a $LIBS"
    ;;
  *)
    AC_MSG_RESULT(yes)
    if test '!' -f $withval/sdiclient.a; then
      AC_ERROR(SecurID sdiclient.a not found in $withval: please supply the correct path.)
    fi
    AC_MSG_RESULT(Assuming SecurID headers and libraries are in $withval.)
    AC_DEFINE(HAVE_SECURID)
    CFLAGS="$CFLAGS -I$withval"
    LIBS="$withval/sdiclient.a $LIBS"
    ;;
  esac ],
  AC_MSG_RESULT(no)
)

AC_MSG_CHECKING(whether to support TIS authentication server)
AC_ARG_WITH(tis,
[  --with-tis[=DIR]        Enable support for TIS authentication server.],
[ case "$withval" in
  no)
    AC_MSG_RESULT(no)
    ;;
  *)
    AC_MSG_RESULT(yes)
    if test '!' -f $withval/libauth.a -a -f $withval/libfwall.a -a -f $withval/firewall.h; then
      AC_ERROR(TIS libauth.a or libfwall.a or firewall.h not found in $withval: please supply the correct path.)
    fi
    AC_MSG_RESULT(Assuming TIS headers and libraries are in $withval.)
    AC_DEFINE(HAVE_TIS)
    CFLAGS="$CFLAGS -I$withval -DHAVE_TIS"
    LIBS="-L$withval -lauth -lfwall $LIBS"
    ;;
  esac ],
  AC_MSG_RESULT(no)
)

AC_MSG_CHECKING(whether to use libwrap)
AC_ARG_WITH(libwrap,
[  --with-libwrap[=PATH]   Compile in libwrap (tcp_wrappers) support.],
[ case "$withval" in
  no)
    AC_MSG_RESULT(no)
    ;;
  yes)
    AC_MSG_RESULT(yes)
    AC_CHECK_LIB(wrap, request_init, [
	AC_DEFINE(LIBWRAP)
        LIBS="-lwrap $LIBS"
        AC_DEFINE(HAVE_LIBWRAP) ])
    ;;
  *)
    AC_MSG_RESULT(yes)
    AC_DEFINE(LIBWRAP)
    if test -d "$withval"; then
    	LIBS="-L$withval -lwrap $LIBS"
    else
	LIBS="$withval $LIBS"
    fi
    AC_TRY_LINK([ int allow_severity; int deny_severity; ],
                [ hosts_access(); ],
		[],
		[ AC_MSG_ERROR(Could not find the $withval library.  You must first install tcp_wrappers.) ])
    ;;
  esac ],
  AC_MSG_RESULT(no)
)

# This allows group writeability in userfile_check_owner_permissions()
AC_MSG_CHECKING(whether to allow group writeability)
AC_ARG_ENABLE(group-writeability,
  [  --enable-group-writeability   Allow group writeability in auth-rsa. ],
  [ AC_MSG_RESULT(yes)
    AC_DEFINE(ALLOW_GROUP_WRITEABILITY) ],
  [ AC_MSG_RESULT(no) ]
)

# Check ssh1 compatibility
AC_PATH_PROG(SSH1_PATH, ssh1, no-ssh1)
AC_MSG_CHECKING(for compatible ssh1)
if test "$SSH1_PATH" = "no-ssh1"; then
  AC_MSG_RESULT(no new enough ssh1 - COMPATIBILITY DISABLED)
else
  AC_MSG_RESULT(yes)
  AC_DEFINE(SSH1_COMPATIBILITY)
  SSHD1_PATH=`echo $SSH1_PATH | sed 's@/bin/ssh1$@/sbin/sshd1@'`
  SCP1_PATH=`echo $SSH1_PATH | sed 's@/bin/ssh1$@/bin/scp1@'`
  AC_DEFINE_UNQUOTED(SSH1_PATH, "$SSH1_PATH")
  AC_DEFINE_UNQUOTED(SSHD1_PATH, "$SSHD1_PATH")
  AC_DEFINE_UNQUOTED(SCP1_PATH, "$SCP1_PATH")
fi

AC_MSG_CHECKING(for default SOCKS server)
AC_ARG_WITH(socks-server,
[  --with-socks-server=VALUE  Use VALUE as default SSH_SOCKS_SERVER value. ],
[ case "$withval" in
  no)
    AC_MSG_RESULT([none (using SSH_SOCKS_SERVER environment variable at run-time)])
    ;;
  yes)
    AC_MSG_ERROR([Must specify default socks server with --socks-server=VALUE.])
    ;;
  *)
    AC_MSG_RESULT([SOCKS server at $withval])
    AC_DEFINE_UNQUOTED(SOCKS_DEFAULT_SERVER, "$withval")
    ;;
  esac ],
  AC_MSG_RESULT([none (using SSH_SOCKS_SERVER environment variable at run-time)])
)

AC_SUBST(ETCDIR)

#
# configure.in fragment for sshcrypt (crypto library)
#
# Author: Tatu Ylonen <ylo@ssh.fi>
#
# Copyright (c) 1997 SSH Communications Security, Finland
#                    All rights reserved
#

#ifdef SSHDIST_CRYPT_ASM
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#endif SSHDIST_CRYPT_ASM

AC_SUBST(CRYPTO_CONF_OBJS)

AC_CHECK_FUNCS(times clock)
AC_CHECK_FUNCS(getpid getppid getuid getgid getpgrp)

#ifdef SSHDIST_CRYPT_IDEA
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#endif SSHDIST_CRYPT_IDEA

#ifdef SSHDIST_CRYPT_RSA
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#endif SSHDIST_CRYPT_RSA

#
# configure.in fragment for sshmath (arithmetic library)
#
# Author: Tatu Ylonen <ylo@ssh.fi>
#
# Copyright (c) 1997 SSH Communications Security, Finland
#                    All rights reserved
#

#ifdef SSHDIST_MATH_ASM
case "$target" in
#ifdef SSHDIST_MATH_ASM_I386
  i*86-*-bsdi*|i*86-*-freebsd*|i*86-*-netbsd*|i*86-*-openbsd*|i*86-*-linux*)
    if test -n "$GCC"; then
      MATH_CONF_OBJS="$MATH_CONF_OBJS sshmp_i386.o"
      AC_DEFINE(SSHMATH_ASSEMBLER_SUBROUTINES)
      AC_DEFINE(SSHMATH_I386)
    fi
    ;;
#endif SSHDIST_MATH_ASM_I386
  *-*-*)
    ;;
esac
#endif SSHDIST_MATH_ASM

AC_SUBST(MATH_CONF_OBJS)

AC_CHECK_FUNCS(times clock)
#
# configure.in.inc for sshreadline
#
# Author: Tatu Ylonen <ylo@ssh.fi>
#	  Timo J. Rinne <tri@ssh.fi>
#
# Copyright (c) 1997 SSH Communications Security, Finland
#                    All rights reserved
#

AC_CHECK_LIB(termcap, tgetent)
AC_CHECK_LIB(xcurses, tgetent)
AC_CHECK_LIB(ncurses, tgetent)
AC_CHECK_HEADERS(termcap.h)


#
# configure.in fragment for sshsession (mostly pty and child process handling)
#
# Author: Tatu Ylonen <ylo@ssh.fi>
#
# Copyright (c) 1997 SSH Communications Security, Finland
#                    All rights reserved
#

pty=""

case "$target" in
  *-*-sunos4.1.1*)
    # Tim Adam <tma@osa.com.au> says speed_t is defined in stdtypes.h
    AC_DEFINE(SPEED_T_IN_STDTYPES_H)
    ;;
  *-*-solaris*)
    AC_DEFINE(SECURE_RPC)
    AC_DEFINE(SECURE_NFS)
    AC_DEFINE(NIS_PLUS)
    ;;
  mips-dec-mach3*)
    # Mach3 stuff from kivinen@hut.fi
    no_vhangup=yes
    no_setsid=yes
    ;;
  *-sgi-irix5*)
    # force /etc/shadow support. they can run /sbin/pwconv at any time.
    # if they do so, don't let sshd down:-) appro@fy.chalmers.se
    AC_DEFINE(HAVE_ETC_SHADOW)
    no_shadows_password_checking=yes
    ;;
  *-sgi-irix6*)
    # force /etc/shadow support. they can run /sbin/pwconv at any time.
    # if they do so, don't let sshd down:-) appro@fy.chalmers.se
    AC_DEFINE(HAVE_ETC_SHADOW)
    no_shadows_password_checking=yes
    ;;
  *-ibm-aix*)
    AC_CHECK_LIB(s, getuserattr)
    ;;
  *-dec-ultrix*)
    # Ultrix stuff from dmckilli@qc.bell.ca, jbotz@orixa.mtholyoke.edu,
    # corey@cac.washington.edu
    AC_DEFINE(HAVE_ULTRIX_SHADOW_PASSWORDS)
    AC_DEFINE(O_NONBLOCK_BROKEN)
    no_vhangup=yes
    no_utmpx=yes
    no_termios=yes
    no_shadows_password_checking=yes
    AC_CHECK_LIB(auth, authenticate_user)
    ;;
  *-*-hpux*)
    AC_MSG_CHECKING(for HPUX tcb auth option)
    if test -f /tcb/files/auth/system/pw_id_map; then
      AC_MSG_RESULT(yes)
      AC_DEFINE(HAVE_HPUX_TCB_AUTH)
      LIBS="$LIBS -lsec"
    else
      AC_MSG_RESULT(no)
    fi
    AC_MSG_CHECKING(for keyserv)
    if test -f /usr/sbin/keyserv; then
      AC_MSG_RESULT(yes)
      AC_DEFINE(SECURE_RPC)
      LIBS="$LIBS -lrpcsvc"
    else
      AC_MSG_RESULT(no)
    fi
    no_utmpx=yes
    ;;
  alpha-dec-osf*)
    AC_CHECK_LIB(security, set_auth_parameters)
    AC_CHECK_FUNCS(setluid getespwnam)
    no_utmpx=yes
    AC_MSG_CHECKING(for OSF/1 C2 security package)
    osfc2sec=`/usr/sbin/setld -i | grep '^OSFC2SEC' | grep 'installed'`
    if test -n "$osfc2sec"; then
      AC_MSG_RESULT(yes)
      AC_DEFINE(HAVE_OSF1_C2_SECURITY)
      SSHSESSION_CONFOBJS="$SSHSESSION_CONFOBJS tcbc2.o"
      OLD_CFLAGS="$CFLAGS"
      CFLAGS="$CFLAGS -I."
      AC_TRY_COMPILE([#include <sys/types.h>
#include <sys/security.h>
#include <prot.h>], , , [
        AC_MSG_WARN([Could not include <prot.h> file.
The digital unix 4.0 prot.h tries to include <acl.h> instead of <sys/acl.h>.
Making a local copy of prot.h and patching it.])
        # Note: the copy will go to the top-level directory where configure
	# is run.
        sed 's@<acl.h>@<sys/acl.h>@g' </usr/include/prot.h >prot.h
      ])
      CFLAGS="$OLD_CFLAGS"
    else
      AC_MSG_RESULT(no)
    fi
    AC_DEFINE(TTY_GROUP, "terminal")
    ;;
  *-*-nextstep*)
    # Nextstep support from a person who wants to remain anonymous
    no_termios=yes
    if test -f /usr/include/bsd/sys/termios.h; then
      AC_DEFINE(SPEED_T_IN_STDTYPES_H)
    fi
    ;;
  *-*-linux*)
    # Linux shadow password support (Andrew.Macpherson.1248566@bnr.co.uk)
    if test -f /etc/shadow && test -f /etc/login.defs; then
      AC_MSG_RESULT(Using linux John Haugh shadow passwords and pw_encrypt for password encryption)
      AC_CHECK_LIB(shadow, pw_encrypt)
      AC_CHECK_FUNCS(pw_encrypt, AC_DEFINE(crypt,pw_encrypt))
    fi
    ;;
  m68k-sony-newsos*)
    # From snabb@niksula.hut.fi
    no_vhangup=yes
    ;;
  *-*-machten*)
    no_vhangup=yes
    ;;
  t3e-*-*)
    CFLAGS="$CFLAGS -I."
    LIBS="$LIBS -lrsc"
    ;;
  *-cray-*)
    CFLAGS="$CFLAGS -DCRAY_STACKSEG_END=_getb67"
    LIBS="$LIBS -lrsc"
    pty="cray"
    ;;
  i*86-unknown-sco3.2v4*)
    # From moi@dio.com
    AC_DEFINE(HAVE_SCO_ETC_SHADOW)
    LIBS="-L/usr/lib/libp -lprot -lx $LIBS"
    ;;
  i*86-unknown-sco3.2v5*)
    # From brian@ilinx.com
    AC_DEFINE(HAVE_SCO_ETC_SHADOW)
    LIBS="-L/usr/lib/libp -lprot -lx $LIBS"
    ;;
  *-convex-bsd*)
    # From mark.martinec@nsc.ijs.si
    # On Convex, getpwnam sets pw_passwd if running as root
    no_shadows_password_checking=yes
    ;;
  *-sequent-dynix*|*-sequent-ptx*)
    LIBS="-lsec $LIBS"
    ;;
  *-*-freebsd|*-*-netbsd*|*-*-openbsd*)
    # From Ollivier Robert: FreeBSD and NetBSD use master.passwd, but set
    # pw_passwd automatically when running as root.
    no_shadow_password_checking=yes
    ;;
  *)
    ;;
esac

if test -z "$no_utmpx"; then
  AC_CHECK_HEADERS(utmpx.h)
fi

if test -z "$no_termios"; then
  AC_CHECK_HEADERS(termios.h)
fi

if test -z "$no_vhangup"; then
  AC_CHECK_FUNCS(vhangup)
fi

if test -z "$no_setsid"; then
  AC_CHECK_FUNCS(setsid)
fi

AC_HEADER_SYS_WAIT
AC_CHECK_HEADERS(sgtty.h sys/ioctl.h libutil.h usersec.h login_cap.h sys/resource.h)
AC_CHECK_HEADERS(sia.h)
AC_CHECK_FUNCS(revoke openpty _getpty setpgrp setpgid ttyslot authenticate)
AC_CHECK_FUNCS(makeutx setlogin openpty _getpty innetgr initgroups setpgrp)
AC_CHECK_FUNCS(signal setrlimit getrlimit)
AC_CHECK_LIB(c, crypt, [true], AC_CHECK_LIB(crypt, crypt))
AC_CHECK_LIB(sec, getspnam)
AC_CHECK_LIB(seq, get_process_stats)

AC_CHECK_FUNCS(getspnam daemon)

AC_MSG_CHECKING(for /etc/default/login)
if test -f /etc/default/login; then
  AC_DEFINE(HAVE_ETC_DEFAULT_LOGIN)
  AC_MSG_RESULT(yes)
else
  AC_MSG_RESULT(no)
fi

if test -z "$no_shadows_password_checking"; then
  AC_MSG_CHECKING(for shadow passwords)
  if test -f /etc/shadow; then
      # If we don't have shadow.h, this might be some nonstandard
      # kludging... So better check it out.
    if test "x$ac_cv_header_shadow_h" = "xyes"; then
      AC_DEFINE(HAVE_ETC_SHADOW)
      AC_MSG_RESULT(/etc/shadow)
      # SunOS C2 security uses this style of shadow passwords, but does not
      # have getspent in a system library.  However, a libshadow.a library
      # contaning these is publicly available.
      AC_CHECK_LIB(shadow, getspent)
    else
      AC_MSG_RESULT(no)
    fi
  elif test -n "$os_aix"; then
    AC_DEFINE(HAVE_ETC_SECURITY_PASSWD)
    AC_MSG_RESULT(/etc/security/passwd)
  elif test -n "$os_sunos"; then
    AC_DEFINE(HAVE_ETC_SECURITY_PASSWD_ADJUNCT)
    AC_MSG_RESULT(/etc/security/passwd.adjunct)
  else
    AC_MSG_RESULT(no)
  fi
fi

AC_MSG_CHECKING(location of mail spool files)
for dir in /var/spool/mail /var/mail /usr/spool/mail /usr/mail FILE
do
  if test "$dir" = "FILE"; then
    if test -f $HOME/.MailBox; then
      AC_MSG_WARN(mail spool directory was not found: assuming you use \$HOME/.MailBox)
      AC_DEFINE_UNQUOTED(MAIL_SPOOL_FILE, ".MailBox")
      AC_MSG_RESULT(\$HOME/.MailBox)
    else
      AC_MSG_WARN(mail spool directory was not found: assuming you use \$HOME/newmail)
      AC_DEFINE_UNQUOTED(MAIL_SPOOL_FILE, "newmail")
      AC_MSG_RESULT(\$HOME/newmail)
    fi
  elif test -d $dir; then
    AC_DEFINE_UNQUOTED(MAIL_SPOOL_DIRECTORY, "$dir")
    AC_MSG_RESULT($dir)
    break
  fi
done

AC_EGREP_HEADER(ut_pid, utmp.h, AC_DEFINE(HAVE_PID_IN_UTMP))
AC_EGREP_HEADER(ut_name, utmp.h, AC_DEFINE(HAVE_NAME_IN_UTMP))
AC_EGREP_HEADER(ut_id, utmp.h, AC_DEFINE(HAVE_ID_IN_UTMP))
AC_EGREP_HEADER(ut_host, utmp.h, AC_DEFINE(HAVE_HOST_IN_UTMP))
AC_EGREP_HEADER(ut_addr, utmp.h, AC_DEFINE(HAVE_ADDR_IN_UTMP))

AC_MSG_CHECKING(location of utmp)
if test -f /var/run/utmp; then
  AC_DEFINE(SSH_UTMP, "/var/run/utmp")
  AC_MSG_RESULT(/var/run/utmp)
elif test -f /var/log/utmp; then
  AC_DEFINE(SSH_UTMP, "/var/log/utmp")
  AC_MSG_RESULT(/var/log/utmp)
elif test -f /var/adm/utmp; then
  AC_DEFINE(SSH_UTMP, "/var/adm/utmp")
  AC_MSG_RESULT(/var/adm/utmp)
elif test -f /usr/adm/utmp; then
  AC_DEFINE(SSH_UTMP, "/usr/adm/utmp")
  AC_MSG_RESULT(/usr/adm/utmp)
elif test -f /etc/utmp; then
  AC_DEFINE(SSH_UTMP, "/etc/utmp")
  AC_MSG_RESULT(/etc/utmp)
else
  AC_MSG_RESULT(not found)
fi

AC_MSG_CHECKING(location of wtmp)
if test -f /var/log/wtmp; then
  AC_DEFINE(SSH_WTMP, "/var/log/wtmp")
  AC_MSG_RESULT(/var/log/wtmp)
elif test -f /var/adm/wtmp; then
  AC_DEFINE(SSH_WTMP, "/var/adm/wtmp")
  AC_MSG_RESULT(/var/adm/wtmp)
elif test -f /usr/adm/wtmp; then
  AC_DEFINE(SSH_WTMP, "/usr/adm/wtmp")
  AC_MSG_RESULT(/usr/adm/wtmp)
elif test -f /etc/wtmp; then
  AC_DEFINE(SSH_WTMP, "/etc/wtmp")
  AC_MSG_RESULT(/etc/wtmp)
else
  AC_DEFINE(SSH_WTMP, "/var/adm/wtmp")
  AC_MSG_RESULT(not found)
fi

AC_MSG_CHECKING(location of lastlog)
if test -f /var/log/lastlog || test -d /var/log/lastlog; then
  AC_DEFINE(SSH_LASTLOG, "/var/log/lastlog")
  AC_DEFINE(HAVE_LASTLOG)
  LASTLOG=/var/log/lastlog
  AC_MSG_RESULT(/var/log/lastlog)
elif test -f /var/adm/lastlog || test -d /var/adm/lastlog; then
  AC_DEFINE(SSH_LASTLOG, "/var/adm/lastlog")
  AC_DEFINE(HAVE_LASTLOG)
  LASTLOG=/var/adm/lastlog
  AC_MSG_RESULT(/var/adm/lastlog)
elif test -f /usr/adm/lastlog || test -d /usr/adm/lastlog; then
  AC_DEFINE(SSH_LASTLOG, "/usr/adm/lastlog")
  AC_DEFINE(HAVE_LASTLOG)
  LASTLOG=/usr/adm/lastlog
  AC_MSG_RESULT(/usr/adm/lastlog)
elif test -f /etc/lastlog || test -d /etc/lastlog; then
  AC_DEFINE(SSH_LASTLOG, "/etc/lastlog")
  AC_DEFINE(HAVE_LASTLOG)
  LASTLOG=/etc/lastlog
  AC_MSG_RESULT(/etc/lastlog)
else
  AC_MSG_RESULT(not found)
  AC_DEFINE(SSH_LASTLOG, "/var/log/lastlog")
  LASTLOG=/var/log/lastlog
fi

AC_MSG_CHECKING(whether $LASTLOG is a directory)
if test -d $LASTLOG
then
  AC_MSG_RESULT(yes)
  AC_DEFINE(LASTLOG_IS_DIR)
else
  AC_MSG_RESULT(no)
fi

if test -z "$no_libsun"; then
  AC_CHECK_LIB(sun, getpwnam)
fi
if test -z "$no_libbsd"; then
  AC_CHECK_LIB(bsd, openpty)
fi
AC_CHECK_LIB(util, login, AC_DEFINE(HAVE_LIBUTIL_LOGIN)
			  LIBS="$LIBS -lutil")

if test -z "$no_vhangup"; then
  AC_CHECK_FUNCS(vhangup)
fi

if test -z "$no_setsid"; then
  AC_CHECK_FUNCS(setsid)
fi

AC_MSG_CHECKING(for pseudo ttys)
if test -n "$pty"; then
  AC_MSG_RESULT($pty)
else
if test "$ac_cv_func__getpty" = "yes"; then
  pty="getpty"
  AC_MSG_RESULT(_getpty)
else
if test "$ac_cv_func_openpty" = "yes"; then
  pty="openpty"
  AC_MSG_RESULT(openpty)
else
if test -c /dev/getpty
then
  pty="getpseudotty"
  AC_MSG_RESULT(getpseudotty)
else
if test -c /dev/ptmx && test -c /dev/pts/0
then
  pty="ptmx"
  AC_MSG_RESULT(streams ptys)
else
if test -c /dev/pts && test -c /dev/ptc
then
  pty="pts"
  AC_MSG_RESULT(/dev/pts and /dev/ptc)
else
if test -c /dev/ptyp10
then
  pty="sco"
  AC_MSG_RESULT(sco-style ptys)
else
  pty="bsd"
  AC_MSG_RESULT(bsd-style ptys)
fi
fi
fi
fi
fi
fi
fi

SSHSESSION_CONFOBJS="$SSHSESSION_CONFOBJS pty-$pty.o"
AC_SUBST(SSHSESSION_CONFOBJS)

#
# configure.in fragment for sshutil (generic utilities and portability stuff)
#
# Author: Tatu Ylonen <ylo@ssh.fi>
#
# Copyright (c) 1997 SSH Communications Security, Finland
#                    All rights reserved
#

# So many systems seem to need this that it is better do it here automatically.
LIBS="-L/usr/local/lib $LIBS"

# Platform-specific stuff.
case "$target" in
  alpha-dec-osf*)
    CFLAGS="$CFLAGS -D_OSF_SOURCE"
    ;;
  m88k-dg-dgux*)
    AC_DEFINE(BROKEN_INET_ADDR)
    ;;
  *-sequent-ptx*)
    # From geek+@cmu.edu
    test_libinet=yes
    ;;
  *-sequent-dynix*|*-sequent-ptx*)
    LIBS="-lseq -lsocket -linet -lnsl $LIBS"
    ;;
  *)
    ;;
esac

if test -z "$no_libnsl"; then
  AC_CHECK_LIB(nsl, main)
fi
if test -n "$test_libinet"; then
  AC_CHECK_LIB(inet, inet_network)
fi
if test -z "$no_libsocket"; then
  AC_CHECK_LIB(socket, socket)
fi

AC_CHECK_FUNCS(strchr memcpy gethostname gettimeofday signal)
AC_CHECK_FUNCS(getservbyname getservbyport)
AC_CHECK_FUNCS(popen lockf getrusage uname)
AC_CHECK_FUNCS(getpid getppid getuid getgid getpgrp)
AC_CHECK_FUNCS(endpwent endgrent getgrgid getpwuid)
AC_CHECK_FUNCS(truncate ftruncate chown fchown chmod fchmod fstat)
AC_CHECK_FUNCS(lutimes futimes utime usleep)

AC_REPLACE_FUNCS(strerror memmove memset remove random putenv)
AC_REPLACE_FUNCS(strcasecmp strncasecmp snprintf crypt)

AC_CHECK_HEADERS(unistd.h netinet/in_systm.h machine/endian.h endian.h paths.h)
AC_CHECK_HEADERS(sys/un.h sys/utsname.h)
AC_CHECK_HEADERS(termcap.h rusage.h pwd.h grp.h sys/time.h dirent.h)

AC_CHECK_LIB(termcap, tgetent)

# Check if /var/run exists (this is used by includes.h to set PIDDIR).
if test -d /var/run; then
  AC_DEFINE(HAVE_VAR_RUN)
fi

AC_MSG_CHECKING(whether to enable TCP_NODELAY)
AC_ARG_ENABLE(tcp-nodelay,
[  --enable-tcp-nodelay    Enable TCP_NODELAY socket option],
[ case "$enableval" in
  yes)
       AC_MSG_RESULT(yes)
       AC_DEFINE(ENABLE_TCP_NODELAY)
       ;;
  *)
       AC_MSG_RESULT(no)
  esac ],
  AC_MSG_RESULT(yes)
  AC_DEFINE(ENABLE_TCP_NODELAY)
)

AC_MSG_CHECKING(whether to use blocking connect system call)
AC_ARG_ENABLE(blocking-connect,
[  --enable-blocking-connect    Use blocking connect system call.],
[ case "$enableval" in
  yes)
    AC_MSG_RESULT(yes)
    AC_DEFINE(NO_NONBLOCKING_CONNECT)
    ;;
  *)
    AC_MSG_RESULT(no)
    ;;
  esac ],
  AC_MSG_RESULT(no)
)
#XXX configure.args not yet implemented

#
# configure.tail - last fragment of top-level configure.in
#
# Author: Tatu Ylonen <ylo@ssh.fi>
#
# Copyright (c) 1997 SSH Communications Security, Finland
#                    All rights reserved
#

AC_SUBST(AR)
AC_SUBST(RANLIB)
AC_SUBST(PACKAGE)
AC_SUBST(VERSION)

CPPFLAGS="$CPPFLAGS -DSSHDIST_CRYPT_DL -DSSHDIST_CRYPT_DLKEX -DSSHDIST_CRYPT_RIPEMD160 -DSSHDIST_MATH_ASM -DSSHDIST_CRYPT_SHA -DSSHDIST_IPSEC_NETBSD -DSSHDIST_MATH_ASM_I386 -DSSHDIST_CRYPT_GENMAC -DSSHDIST_CRYPT_ARCFOUR -DSSHDIST_CRYPT_SSHMACS -DSSHDIST_CRYPT_DSA -DSSHDIST_CRYPT_HMAC -DSSHDIST_CRYPT_DES -DSSHDIST_CRYPT_GENCIPH -DSSHDIST_CRYPT_GENHASH -DSSHDIST_CRYPT_MD5 -DSSHDIST_ISAKMP_CFG_MODE -DSSHDIST_CRYPT_GENPKCS -DSSHDIST_CRYPT_DH -DSSHDIST_CRYPT_COMPRESS"
AC_OUTPUT(Makefile lib/Makefile lib/zlib/Makefile lib/sshmath/Makefile lib/sshmath/tests/Makefile lib/sshutil/Makefile lib/sshutil/tests/Makefile lib/sshapputil/Makefile lib/sshapputil/tests/Makefile lib/sshcrypt/Makefile lib/sshcrypt/tests/Makefile lib/sshproto/Makefile lib/sshproto/tests/Makefile lib/sshsession/Makefile lib/sshreadline/Makefile lib/sshreadline/tests/Makefile apps/Makefile apps/ssh/Makefile)
